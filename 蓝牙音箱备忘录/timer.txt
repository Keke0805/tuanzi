如何用lvgl写一个定时关机的计时器

删除
重试
复制
可以使用以下步骤实现一个定时关机的计时器：

创建一个标签控件，用于显示计时器的剩余时间。

创建一个定时器，用于每秒钟更新计时器的剩余时间。

添加一个输入框，用于输入关机的时间。

添加一个按钮，用于启动计时器。

当计时器结束时，调用关机命令。

下面是一个示例代码，可以作为参考：

#include <lvgl.h>
#include <stdio.h>

// 定义计时器剩余时间和定时器
static int remaining_time = 0;
static lv_timer_t* timer = NULL;

// 计时器回调函数
static void timer_callback(lv_timer_t* timer) {
    remaining_time--;
    char text[10];
    sprintf(text, "%d s", remaining_time);
    lv_label_set_text(lv_obj_find_child(lv_scr_act(), "timer_label"), text);
    if (remaining_time <= 0) {
        system("shutdown now");
    }
}

// 启动计时器回调函数
static void start_timer_callback(lv_obj_t* btn, lv_event_t event) {
    if (event == LV_EVENT_RELEASED) {
        lv_obj_t* input = lv_obj_find_child(lv_scr_act(), "time_input");
        remaining_time = atoi(lv_textarea_get_text(input));
        timer = lv_timer_create(timer_callback, 1000, NULL);
    }
}

int main(void)
{
    // 初始化LVGL
    lv_init();

    // 创建一个屏幕
    lv_obj_t* screen = lv_disp_get_scr_act(NULL);

    // 创建一个标签，用于显示计时器剩余时间
    lv_obj_t* timer_label = lv_label_create(screen, NULL);
    lv_obj_add_style(timer_label, LV_PART_MAIN, LV_STATE_DEFAULT, &lv_style_plain_color);
    lv_obj_set_style_local_text_color(timer_label, LV_PART_MAIN, LV_STATE_DEFAULT, LV_COLOR_BLACK);
    lv_obj_set_pos(timer_label, 50, 50);
    lv_obj_set_size(timer_label, 100, 50);
    lv_obj_set_name(timer_label, "timer_label");

    // 创建一个输入框，用于输入关机的时间
    lv_obj_t* time_input = lv_textarea_create(screen, NULL);
    lv_obj_add_style(time_input, LV_PART_MAIN, LV_STATE_DEFAULT, &lv_style_plain_color);
    lv_obj_set_style_local_text_color(time_input, LV_PART_MAIN, LV_STATE_DEFAULT, LV_COLOR_BLACK);
    lv_obj_set_pos(time_input, 50, 120);
    lv_obj_set_size(time_input, 100, 50);
    lv_obj_set_name(time_input, "time_input");

    // 创建一个按钮，用于启动计时器
    lv_obj_t* start_btn = lv_btn_create(screen, NULL);
    lv_obj_add_event_cb(start_btn, start_timer_callback, LV_EVENT_ALL, NULL);
    lv_obj_set_pos(start_btn, 50, 190);
    lv_obj_set_size(start_btn, 100, 50);
    lv_obj_t* start_btn_label = lv_label_create(start_btn, NULL);
    lv_label_set_text(start_btn_label, "Start");

    // 运行LVGL
    while(1) {
        lv_task_handler();
        usleep(5000);
    }

    return 0;
}
在这个示例代码中，我们创建了一个标签，用于显示计时器的剩余时间；一个输入框，用于输入关机的时间；一个按钮，用于启动计时器。当用户点击启动按钮时，我们创建了一个定时器，并将其设置为每秒钟更新计时器的剩余时间。当计时器结束时，我们使用系统命令进行关机。

请注意，这只是一个示例代码，您需要根据您的需求进行修改。